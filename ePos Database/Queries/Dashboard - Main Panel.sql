-- DASHBOARD - SALES

-- Category - Top 5 Categories sorted by highest 
SELECT C.NAME CAT_NAME, IFNULL(SUM(OD.PRICE*OD.QUANTITY),0) AMOUNT, TOTAL_AMT.TOT TOTAL, SUM(OD.PRICE*OD.QUANTITY)/TOTAL_AMT.TOT *100 PERCENTAGE FROM ORDER_DETAILS OD
	INNER JOIN ORDERS O ON OD.ORDER_ID = O.ID
		AND O.ENDED BETWEEN '2014-01-01' AND '2014-12-12'
		AND O.REST_ID =1 AND O.ACTIVE = 0
    INNER JOIN MENU M ON M.ID = OD.MENU_ID
    INNER JOIN CATEGORY C ON C.ID = M.CATEGORY_ID
    LEFT JOIN (SELECT SUM(PRICE*QUANTITY) TOT FROM ORDER_DETAILS OD INNER JOIN ORDERS O ON OD.ORDER_ID = O.ID WHERE O.ENDED BETWEEN '2014-01-01' and '2014-12-12'
				AND O.REST_ID =1 AND O.ACTIVE = 0) TOTAL_AMT ON 1 = 1
GROUP BY C.NAME
LIMIT 5

-- Best Sellers - Top 5 best sellers by sales. 
SELECT M.NAME, IFNULL(SUM(OD.PRICE*QUANTITY),0) AMOUNT, COUNT(M.NAME) FROM ORDER_DETAILS OD 
	INNER JOIN ORDERS O ON OD.ORDER_ID = O.ID
		AND O.ENDED BETWEEN '2014-01-01' AND '2014-12-12'
		AND O.REST_ID =1 AND O.ACTIVE = 0
	INNER JOIN MENU M ON M.ID = OD.MENU_ID
GROUP BY M.NAME
ORDER BY SUM(OD.PRICE*QUANTITY) DESC
LIMIT 5

-- Payment Method
SELECT PAYMENT_METHOD, IFNULL(SUM(PAID_AMOUNT),0) AMOUNT FROM ORDERS
WHERE ENDED BETWEEN '2014-01-01' and '2014-12-12'
AND REST_ID =1 AND ACTIVE = 0
GROUP BY PAYMENT_METHOD

-- Month Revenue 
    SELECT IFNULL(AMT,0), REC_MONTH FROM (
    -- This month
    SELECT SUM(PAID_AMOUNT) AMT, DATE_FORMAT(NOW() ,'%Y-%m-01') REC_MONTH FROM ORDERS O
		WHERE O.ENDED BETWEEN DATE_FORMAT(NOW() ,'%Y-%m-01') AND NOW()
			AND O.REST_ID =1 AND O.ACTIVE = 0
    ) A UNION ALL
    
    SELECT IFNULL(AMT,0), REC_MONTH FROM (
    -- Last month
    SELECT SUM(PAID_AMOUNT) AMT, (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 1 MONTH) REC_MONTH FROM ORDERS O
		WHERE O.ENDED BETWEEN (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 1 MONTH) AND SUBDATE(DATE_FORMAT(NOW() ,'%Y-%m-01'), 1)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) B UNION ALL
    
    SELECT IFNULL(AMT,0), REC_MONTH FROM (
    -- 2 months ago 
    SELECT SUM(PAID_AMOUNT) AMT, (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 2 MONTH) REC_MONTH FROM ORDERS O
		WHERE O.ENDED BETWEEN (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 2 MONTH) AND SUBDATE((DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 1 MONTH), 1)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) C UNION ALL
    
    SELECT IFNULL(AMT,0), REC_MONTH FROM (
    -- 3 months ago 
    SELECT SUM(PAID_AMOUNT) AMT, (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 3 MONTH) REC_MONTH FROM ORDERS O
		WHERE O.ENDED BETWEEN (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 3 MONTH) AND SUBDATE((DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 2 MONTH), 1)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
	) D UNION ALL
        
    SELECT IFNULL(AMT,0), REC_MONTH FROM (
    -- 4 months ago 
    SELECT SUM(PAID_AMOUNT) AMT, (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 4 MONTH) REC_MONTH FROM ORDERS O
		WHERE O.ENDED BETWEEN (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 4 MONTH) AND SUBDATE((DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 3 MONTH), 1)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) E UNION ALL
     
    SELECT IFNULL(AMT,0), REC_MONTH FROM (
    -- 5 months ago 
    SELECT SUM(PAID_AMOUNT) AMT, (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 5 MONTH) REC_MONTH FROM ORDERS O
		WHERE O.ENDED BETWEEN (DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 5 MONTH) AND SUBDATE((DATE_FORMAT(NOW() ,'%Y-%m-01') - INTERVAL 4 MONTH), 1)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) F 
    
-- Weekly Renue
	SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- This Week
    SELECT SUM(PAID_AMOUNT) AMT, DATE_FORMAT(NOW() ,'%Y-%m-01') REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d') AND NOW()
			AND O.REST_ID =1 AND O.ACTIVE = 0
    ) A UNION ALL
    
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- Last week
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),7) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),7) AND 
								DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d')
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) B UNION ALL
    
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- 2 Weeks ago 
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),14) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),14) AND 
							SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),7)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) C UNION ALL
    
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- 3 weeks ago 
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),21) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),21) AND 
							SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),14)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
	) D UNION ALL
        
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- 4 weeks ago 
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),28) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),28) AND 
							SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),21)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) E UNION ALL
     
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- 5 weeks ago 
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),35) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),35) AND 
							SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),28)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) F UNION ALL
	
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- 6 weeks ago 
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),42) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),42) AND 
							SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),35)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) G UNION ALL
    
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- 7 Weeks ago 
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),49) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),49) AND 
							SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),42)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) H UNION ALL
    
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- 8 Weeks ago 
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),56) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),56) AND 
							SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),49)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) I UNION ALL
    
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- 9 Weeks ago 
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),63) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),63) AND 
							SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),56)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) J UNION ALL
    
    SELECT IFNULL(AMT,0), REC_WEEK FROM (
    -- 10 Weeks ago 
    SELECT SUM(PAID_AMOUNT) AMT, SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),70) REC_WEEK FROM ORDERS O
		WHERE O.ENDED BETWEEN SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),70) AND 
							SUBDATE(DATE_FORMAT(SUBDATE(SYSDATE(), WEEKDAY(SYSDATE())), '%Y-%m-%d'),63)
    		AND O.REST_ID =1 AND O.ACTIVE = 0
    ) K
    
    
-- DASHBOARD -INVENTORY

-- Non Moving Items: Have not been updated for the past 7 days
SELECT * FROM INVENTORY WHERE LAST_UPDATED_DATE <SUBDATE(SYSDATE(),7)

-- Low in Stock
SELECT * FROM INVENTORY WHERE QUANTITY<MIN_QUANTITY

-- No Stock
SELECT * FROM INVENTORY WHERE QUANTITY=0
